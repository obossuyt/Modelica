#1
char Aclass(3,24)
Adymosim
1.4
Modelica experiment file


#    Experiment parameters
double experiment(7,1)
       0                   # StartTime    Time at which integration starts
                           #              (and linearization and trimming time)
 1.7280000000000000E+005   # StopTime     Time at which integration stops
       0                   # Increment    Communication step size, if > 0
     500                   # nInterval    Number of communication intervals, if > 0
 1.0000000000000001E-005   # Tolerance    Relative precision of signals for
                           #              simulation, linearization and trimming
       0                   # MaxFixedStep Maximum step size of fixed step size
                           #              integrators, if > 0.0
       8                   # Algorithm    Integration algorithm as integer (1...28)
                           #
                           #             | model|       |        | dense | state |
                           # Algorithm   | typ  | stiff | order  | output| event |
                           # ------------+------+-------+--------+-------+-------+
                           #  1 | deabm  |  ode |   no  |  1-12  |  yes  |   no  |
                           #  2 | lsode1 |  ode |   no  |  1-12  |  yes  |   no  |
                           #  3 | lsode2 |  ode |  yes  |  1-5   |  yes  |   no  |
                           #  4 | lsodar |  ode |  both |1-12,1-5|  yes  |  yes  |
                           #  5 | dopri5 |  ode |   no  |   5    |   no  |   no  |
                           #  6 | dopri8 |  ode |   no  |   8    |   no  |   no  |
                           #  7 | grk4t  |  ode |  yes  |   4    |   no  |   no  |
                           #  8 | dassl  |  dae |  yes  |  1-5   |  yes  |  yes  |
                           #  9 | odassl | hdae |  yes  |  1-5   |  yes  |  yes  |
                           # 10 | mexx   | hdae |   no  |  2-24  |   no  |   no  |
                           # 11 | euler  |  ode |   no  |   1    |   no  |  yes  |
                           # 12 | rkfix2 |  ode |   no  |   2    |   no  |  yes  |
                           # 13 | rkfix3 |  ode |   no  |   3    |   no  |  yes  |
                           # 14 | rkfix4 |  ode |   no  |   4    |   no  |  yes  |
                           #>=14| others |  ode |yes/no |  2-5   |   yes |  yes  |
                           # ---+--------+------+-------+--------+-------+-------+
                           # euler and rkfix have fixed stepsize.


#    Method tuning parameters
double method(27,1)
       1                   # grid     type of communication time grid, defined by
                           #          = 1: equidistant points ("Increment/nInterval")
                           #          = 2: vector of grid points ("tgrid")
                           #          = 3: variable step integrator (automatically)
                           #          = 4: model (call of "increment" in Dymola, e.g.
                           #                      incr=Time > 2 then 0 else 0.1
                           #                      dummy=increment(incr))
                           #          grid = 1,3 is stopped by "StopTime"
                           #          grid = 2   is stopped by "tgrid(last)"
                           #          grid = 4   runs forever (stopped by model)
       1                   # nt       Use every NT time instant, if grid = 3
       3                   # dense    1/2/3 restart/step/interpolate GRID points
       1                   # evgrid   0/1 do not/save event points in comm. time grid
       1                   # evu      0/1 U-discontinuity does not/trigger events
       0                   # evuord       U-discontinuity order to consider (0,1,...)
       0                   # error    0/1/2 One message/warning/error messages
       0                   # jac      0/1 Compute jacobian numerically/by BLOCKJ
       0                   # xd0c     0/1 Compute/set XD0
       0                   # f3       0/1 Ignore/use F3 of HDAE (= index 1)
       0                   # f4       0/1 Ignore/use F4 of HDAE (= index 2)
       0                   # f5       0/1 Ignore/use F5 of HDAE (= invar.)
       0                   # debug    flags for debug information (1<<0 uses pdebug) 
     100                   # pdebug       priority of debug information (1...100)
       0                   # fmax     Maximum number of evaluations of BLOCKF, if > 0
       0                   # ordmax   Maximum allowed integration order, if > 0
       0                   # hmax     Maximum absolute stepsize, if > 0
       0                   # hmin     Minimum absolute stepsize, if > 0 (use with care!)
       0                   # h0       Stepsize to be attempted on first step, if > 0
 2.0000000000000000E-014   # teps     Bound to check, if 2 equal time instants
 1.0000000000000000E-010   # eveps    Hysteresis epsilon at event points
      20                   # eviter   Maximum number of event iterations
 9.9999999999999995E-007   # delaym   Minimum time increment in delay buffers
       1                   # fexcep   0/1 floating exception crashes/stops dymosim
       1                   # tscale   clock-time = tscale*simulation-time, if grid = 5
                           #          > 1: simulation too slow
                           #          = 1: simulation-time = real-time
                           #          < 1: simulation too fast
       1                   # shared   (not used)
    2473                   # memkey   (not used)


#    Output parameters
int settings(13,1)
 0                         # lprec    0/1 do not/store result data in double
 1                         # lx       0/1 do not/store x  (state variables)
 1                         # lxd      0/1 do not/store xd (derivative of states)
 1                         # lu       0/1 do not/store u  (input     signals)
 1                         # ly       0/1 do not/store y  (output    signals)
 0                         # lz       0/1 do not/store z  (indicator signals)
 1                         # lw       0/1 do not/store w  (auxiliary signals)
 1                         # la       0/1 do not/store a  (alias     signals)
 0                         # lperf    0/1 do not/store performance indicators
 0                         # levent   0/1 do not/store event point
 1                         # lres     0/1 do not/store results on result file
 0                         # lshare   0/1 do not/store info data for shared memory on dsshare.txt
 1                         # lform    0/1 ASCII/Matlab-binary storage format of results
                           #              (for simulation/linearization; not for trimming)


#    Names of initial variables
char initialName(518,72)
VRoo
m_flow_nominal
Q_flow_nominal
vol.energyDynamics
vol.massDynamics
vol.substanceDynamics
vol.traceDynamics
vol.p_start
vol.T_start
vol.X_start[1]
vol.X_start[2]
vol.mSenFac
vol.initialize_p
vol.prescribedHeatFlowRate
vol.simplify_mWat_flow
vol.m_flow_nominal
vol.nPorts
vol.m_flow_small
vol.allowFlowReversal
vol.V
vol.ports[1].m_flow
vol.ports[1].p
vol.ports[1].h_outflow
vol.ports[1].Xi_outflow[1]
vol.ports[2].p
vol.ports[3].m_flow
vol.ports[3].p
vol.heatPort.T
vol.heatPort.Q_flow
vol.p
vol.rho_start
_GlobalScope.Modelica.Media.Interfaces.PartialMixtureMedium.X_default[1]
_GlobalScope.Modelica.Media.Interfaces.PartialMixtureMedium.X_default[2]
vol.state_default.p
vol.state_default.T
vol.state_default.X[1]
vol.state_default.X[2]
vol.rho_default
vol.state_start.p
vol.state_start.T
vol.state_start.X[1]
vol.state_start.X[2]
vol.useSteadyStateTwoPort
vol.masExc.k
vol.masExc.y
theCon.dT
theCon.port_a.T
theCon.G
TVol.port.Q_flow
fan.energyDynamics
fan.massDynamics
fan.substanceDynamics
fan.traceDynamics
fan.p_start
fan.T_start
fan.X_start[1]
fan.X_start[2]
fan.mSenFac
fan.allowFlowReversal
fan.port_a.p
fan.port_b.p
fan.port_a_exposesState
fan.port_b_exposesState
fan.showDesignFlowDirection
fan.m_flow_nominal
fan.m_flow_small
fan.show_T
fan.dp
fan.vol.energyDynamics
fan.vol.massDynamics
fan.vol.substanceDynamics
fan.vol.traceDynamics
fan.vol.p_start
fan.vol.T_start
fan.vol.X_start[1]
fan.vol.X_start[2]
fan.vol.mSenFac
fan.vol.initialize_p
fan.vol.prescribedHeatFlowRate
fan.vol.simplify_mWat_flow
fan.vol.m_flow_nominal
fan.vol.nPorts
fan.vol.m_flow_small
fan.vol.allowFlowReversal
fan.vol.V
fan.vol.ports[1].p
fan.vol.ports[2].p
fan.vol.heatPort.Q_flow
fan.vol.p
fan.vol.Xi[1]
fan.vol.rho_start
fan.vol.state_default.p
fan.vol.state_default.T
fan.vol.state_default.X[1]
fan.vol.state_default.X[2]
fan.vol.rho_default
fan.vol.state_start.p
fan.vol.state_start.T
fan.vol.state_start.X[1]
fan.vol.state_start.X[2]
fan.vol.useSteadyStateTwoPort
fan.vol.hOut_internal
fan.vol.QSen_flow.y
fan.vol.masExc.k
fan.vol.masExc.y
fan.vol.tau
fan.vol.V_nominal
fan.dynamicBalance
fan.addPowerToMedium
fan.tau
fan.heatPort.T
fan.heatPort.Q_flow
fan.rho_in
fan.preSou.allowFlowReversal
fan.preSou.port_a.p
fan.preSou.port_a_exposesState
fan.preSou.port_b_exposesState
fan.preSou.showDesignFlowDirection
fan.preSou.dp_start
fan.preSou.m_flow_start
fan.preSou.m_flow_small
fan.preSou.show_T
fan.preSou.show_V_flow
fan.preSou.dp
fan.preSou.V_flow
fan.preSou.control_m_flow
fan.preSou.dp_internal
fan.sta_start.p
fan.sta_start.T
fan.sta_start.X[1]
fan.sta_start.X[2]
fan.h_outflow_start
fan.use_powerCharacteristic
fan.motorCooledByFluid
fan.homotopyInitialization
fan.rho_default
fan.P
fan.WHyd
fan.WFlo
fan.Q_flow
fan.eta
fan.etaHyd
fan.etaMot
fan.VMachine_flow
fan._perPow.hydraulicEfficiency.V_flow[1]
fan._perPow.hydraulicEfficiency.eta[1]
fan._perPow.motorEfficiency.V_flow[1]
fan._perPow.motorEfficiency.eta[1]
fan._perPow.power.V_flow[1]
fan._perPow.power.P[1]
fan._perPow.motorCooledByFluid
fan._perPow.use_powerCharacteristic
fan.delta_V_flow
fan.motDer[1]
fan.hydDer[1]
fan.QThe_flow
fan.control_m_flow
fan.per.hydraulicEfficiency.V_flow[1]
fan.per.hydraulicEfficiency.eta[1]
fan.per.motorEfficiency.V_flow[1]
fan.per.motorEfficiency.eta[1]
fan.per.power.V_flow[1]
fan.per.power.P[1]
fan.per.motorCooledByFluid
fan.per.use_powerCharacteristic
fan.r_V
fan.p_a_default
fan.V_flow_max
fan.sta_default.p
fan.sta_default.T
fan.sta_default.X[1]
fan.sta_default.X[2]
fan.filteredSpeed
fan.riseTime
fan.init
fan.m_flow_start
fan.m_flow_in
fan.filter.u
fan.filter.analogFilter
fan.filter.filterType
fan.filter.order
fan.filter.f_cut
fan.filter.gain
fan.filter.A_ripple
fan.filter.f_min
fan.filter.normalized
fan.filter.init
fan.filter.nx
fan.filter.x_start[1]
fan.filter.x_start[2]
fan.filter.y_start
fan.filter.u_nominal
fan.filter.x[1]
fan.filter.der(x[1])
fan.filter.x[2]
fan.filter.der(x[2])
fan.filter.ncr
fan.filter.nc0
fan.filter.na
fan.filter.nr
fan.filter.cr[1]
fan.filter.cr[2]
fan.filter.r[1]
fan.filter.r[2]
fan.filter.uu[1]
TSet.amplitude
TSet.width
TSet.period
TSet.nperiod
TSet.offset
TSet.startTime
TSet.y
TSet.T_width
TSet.T_start
TSet.count
conPI.y
conPI.controlError
conPI.controllerType
conPI.k
conPI.Ti
conPI.Td
conPI.yMax
conPI.yMin
conPI.wp
conPI.wd
conPI.Ni
conPI.Nd
conPI.initType
conPI.limitsAtInit
conPI.xi_start
conPI.xd_start
conPI.y_start
conPI.strict
conPI.unitTime
conPI.addP.y
conPI.addP.k1
conPI.addP.k2
conPI.P.k
conPI.P.y
conPI.gainPID.k
conPI.gainPID.u
conPI.gainPID.y
conPI.addPID.k1
conPI.addPID.k2
conPI.addPID.k3
conPI.limiter.uMax
conPI.limiter.uMin
conPI.limiter.strict
conPI.limiter.limitsAtInit
conPI.with_I
conPI.with_D
conPI.Dzero.k
conPI.reverseAction
conPI.revAct
mFan_flow.k
mFan_flow.y
bou.nPorts
bou.medium.p
bou.medium.d
bou.medium.X[2]
bou.medium.u
bou.medium.R
bou.medium.MM
bou.medium.state.p
bou.medium.preferredMediumStates
bou.medium.standardOrderComponents
bou.medium.T_degC
bou.medium.p_bar
bou.medium.MMX[1]
bou.medium.MMX[2]
bou.medium.X_air
bou.medium.dT
bou.ports[1].m_flow
bou.ports[1].p
bou.ports[1].h_outflow
bou.flowDirection
bou.use_p
bou.p
bou.d
bou.use_T
bou.T
bou.h
bou.X[1]
bou.X[2]
THeaOut.allowFlowReversal
THeaOut.port_a.p
THeaOut.port_b.p
THeaOut.port_b.h_outflow
THeaOut.port_a_exposesState
THeaOut.port_b_exposesState
THeaOut.showDesignFlowDirection
THeaOut.m_flow_nominal
THeaOut.m_flow_small
THeaOut.tau
THeaOut.initType
THeaOut.k
THeaOut.dynamic
THeaOut.mNor_flow
THeaOut.T
THeaOut.der(T)
THeaOut.T_start
THeaOut.transferHeat
THeaOut.TAmb
THeaOut.tauHeaTra
THeaOut.tauHeaTraInv
THeaOut.tauInv
THeaOut.TMed
THeaOut.T_a_inflow
THeaOut.T_b_inflow
hea.allowFlowReversal
hea.port_b.p
hea.port_a_exposesState
hea.port_b_exposesState
hea.showDesignFlowDirection
hea.m_flow_nominal
hea.m_flow_small
hea.show_T
hea.dp
hea.computeFlowResistance
hea.from_dp
hea.dp_nominal
hea.linearizeFlowResistance
hea.deltaM
hea.Q_flow_maxHeat
hea.Q_flow_maxCool
hea.tau
hea.T_start
hea.energyDynamics
hea.homotopyInitialization
hea.TSet
hea.Q_flow
hea.preDro.allowFlowReversal
hea.preDro.port_b.p
hea.preDro.port_a_exposesState
hea.preDro.port_b_exposesState
hea.preDro.showDesignFlowDirection
hea.preDro.m_flow_nominal
hea.preDro.m_flow_small
hea.preDro.show_T
hea.preDro.dp
hea.preDro.from_dp
hea.preDro.dp_nominal
hea.preDro.homotopyInitialization
hea.preDro.linearized
hea.preDro.m_flow_turbulent
hea.preDro.sta_default.p
hea.preDro.sta_default.T
hea.preDro.sta_default.X[1]
hea.preDro.sta_default.X[2]
hea.preDro.eta_default
hea.preDro.m_flow_nominal_pos
hea.preDro.dp_nominal_pos
hea.preDro.use_dh
hea.preDro.dh
hea.preDro.ReC
hea.preDro.deltaM
hea.preDro.k
hea.preDro.computeFlowResistance
hea.heaCoo.allowFlowReversal
hea.heaCoo.port_a.p
hea.heaCoo.port_b.p
hea.heaCoo.port_a_exposesState
hea.heaCoo.port_b_exposesState
hea.heaCoo.showDesignFlowDirection
hea.heaCoo.dp_start
hea.heaCoo.m_flow_start
hea.heaCoo.m_flow_small
hea.heaCoo.show_T
hea.heaCoo.show_V_flow
hea.heaCoo.dp
hea.heaCoo.Q_flow_maxHeat
hea.heaCoo.Q_flow_maxCool
hea.heaCoo.m_flow_nominal
hea.heaCoo.tau
hea.heaCoo.T_start
hea.heaCoo.energyDynamics
hea.heaCoo.cp_default
hea.heaCoo.restrictHeat
hea.heaCoo.restrictCool
hea.heaCoo.deltah
hea.heaCoo.dynamic
hea.heaCoo.m_flow_pos
hea.heaCoo.m_flow_limited
hea.heaCoo.hSet
hea.heaCoo.T
hea.heaCoo.der(T)
hea.heaCoo.dhSetAct
hea.heaCoo.k
hea.heaCoo.mNor_flow
tab.table[1, 1]
tab.table[1, 2]
tab.table[2, 1]
tab.table[2, 2]
tab.offset
tab.constantExtrapolation
tab.nCol
tab.offsetVector[1, 1]
tab.offsetVector[1, 2]
tab.offsetVector[2, 1]
tab.offsetVector[2, 2]
tab.offsetVector[3, 1]
tab.offsetVector[3, 2]
tab.offsetVector[4, 1]
tab.offsetVector[4, 2]
tab.tab.n
tab.tab.tableOnFile
tab.tab.table[1, 1]
tab.tab.table[1, 2]
tab.tab.table[2, 1]
tab.tab.table[2, 2]
tab.tab.table[3, 1]
tab.tab.table[3, 2]
tab.tab.table[4, 1]
tab.tab.table[4, 2]
tab.tab.verboseRead
tab.tab.columns[1]
tab.tab.smoothness
tab.tab.tableID.id
tab.tab.tableOnFileRead
vol.dynBal.energyDynamics
vol.dynBal.massDynamics
vol.dynBal.substanceDynamics
vol.dynBal.traceDynamics
vol.dynBal.p_start
vol.dynBal.T_start
vol.dynBal.X_start[1]
vol.dynBal.X_start[2]
vol.dynBal.mSenFac
vol.dynBal.initialize_p
vol.dynBal.simplify_mWat_flow
vol.dynBal.nPorts
vol.dynBal.ports[1].p
vol.dynBal.ports[2].p
vol.dynBal.ports[3].m_flow
vol.dynBal.ports[3].p
vol.dynBal.medium.p
vol.dynBal.medium.d
vol.dynBal.medium.T
vol.dynBal.medium.X[2]
vol.dynBal.medium.u
vol.dynBal.medium.R
vol.dynBal.medium.MM
vol.dynBal.medium.state.p
vol.dynBal.medium.preferredMediumStates
vol.dynBal.medium.standardOrderComponents
vol.dynBal.medium.T_degC
vol.dynBal.medium.p_bar
vol.dynBal.medium.MMX[1]
vol.dynBal.medium.MMX[2]
vol.dynBal.medium.X_air
vol.dynBal.medium.dT
vol.dynBal.U
vol.dynBal.der(U)
vol.dynBal.m
vol.dynBal.der(m)
vol.dynBal.mXi[1]
vol.dynBal.der(mXi[1])
vol.dynBal.mb_flow
vol.dynBal.Hb_flow
vol.dynBal.fluidVolume
vol.dynBal.CSen
vol.dynBal.mWat_flow
vol.dynBal.ports_H_flow[1]
vol.dynBal.ports_H_flow[2]
vol.dynBal.ports_H_flow[3]
vol.dynBal.ports_mXi_flow[1, 1]
vol.dynBal.ports_mXi_flow[2, 1]
vol.dynBal.ports_mXi_flow[3, 1]
vol.dynBal.cp_default
vol.dynBal.rho_start
vol.dynBal.computeCSen
vol.dynBal.state_default.p
vol.dynBal.state_default.T
vol.dynBal.state_default.X[1]
vol.dynBal.state_default.X[2]
vol.dynBal.rho_default
vol.dynBal.s[1]
vol.dynBal.hStart
fan.vol.steBal.allowFlowReversal
fan.vol.steBal.port_a.p
fan.vol.steBal.port_b.p
fan.vol.steBal.port_a_exposesState
fan.vol.steBal.port_b_exposesState
fan.vol.steBal.showDesignFlowDirection
fan.vol.steBal.m_flow_nominal
fan.vol.steBal.m_flow_small
fan.vol.steBal.show_T
fan.vol.steBal.dp
fan.vol.steBal.sensibleOnly
fan.vol.steBal.simplify_mWat_flow
fan.vol.steBal.prescribedHeatFlowRate
fan.vol.steBal.Q_flow
fan.vol.steBal.mWat_flow
fan.vol.steBal.s[1]
fan.vol.steBal.m_flowInv
fan.vol.steBal.mXi_flow[1]
fan.vol.steBal.deltaReg
fan.vol.steBal.deltaInvReg
fan.vol.steBal.aReg
fan.vol.steBal.bReg
fan.vol.steBal.cReg
fan.vol.steBal.dReg
fan.vol.steBal.eReg
fan.vol.steBal.fReg
conPI.I.k
conPI.I.initType
conPI.I.y_start
conPI.I.u
conPI.I.y
conPI.I.der(y)
conPI.addI.k1
conPI.addI.k2
conPI.addI.k3
conPI.addI.u3
conPI.addSat.y
conPI.addSat.k1
conPI.addSat.k2
conPI.gainTrack.k

double initialValue(518,6)
  0 9.7200000000000003E+001       0                       0                
  6   256   # VRoo
  0 1.9439999999999999E-001       0                       0                
  6   256   # m_flow_nominal
  0    1080                       0                       0                
  6   256   # Q_flow_nominal
  0       2                       1                       4                
  6   258   # vol.energyDynamics
  0       2                       1                       4                
  6   258   # vol.massDynamics
  0       2                       1                       4                
  6   258   # vol.substanceDynamics
  0       2                       1                       4                
  6   258   # vol.traceDynamics
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6   256   # vol.p_start
 -1 2.9314999999999998E+002       1                   10000                
  1   280   # vol.T_start
 -1 1.0000000000000000E-002       0                       1                
  1   280   # vol.X_start[1]
 -1 9.8999999999999999E-001       0                       1                
  1   280   # vol.X_start[2]
  0       2                       1                 1.0000000000000000E+100
  6   256   # vol.mSenFac
  0       1                       0                       0                
  6   769   # vol.initialize_p
  0       0                       0                       0                
  6   257   # vol.prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # vol.simplify_mWat_flow
  0 1.9439999999999999E-001       0                 1.0000000000000000E+100
  6   256   # vol.m_flow_nominal
  0       3                       0                       0                
  6   258   # vol.nPorts
  0 1.9440000000000000E-005       0                 1.0000000000000000E+100
  6   256   # vol.m_flow_small
  0       1                       0                       0                
  6   257   # vol.allowFlowReversal
  0 9.7200000000000003E+001       0                       0                
  6   256   # vol.V
  0       0                 -100000                  100000                
  6   388   # vol.ports[1].m_flow
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6   260   # vol.ports[1].p
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # vol.ports[1].h_outflow
  0       0                       0                       1                
  6   260   # vol.ports[1].Xi_outflow[1]
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6   260   # vol.ports[2].p
  0       0                 -100000                  100000                
  6   388   # vol.ports[3].m_flow
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6   260   # vol.ports[3].p
  0     300                       1                   10000                
  6   260   # vol.heatPort.T
  0       0                       0                       0                
  6   388   # vol.heatPort.Q_flow
  0 1.0132500000000000E+005       0                       0                
  6   256   # vol.p
  0       0                       0                 1.0000000000000000E+100
  6  1280   # vol.rho_start
  0 1.0000000000000000E-002       0                       1                
  6  1280   # _GlobalScope.Modelica.Media.Interfaces.PartialMixtureMedium.X_default[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # _GlobalScope.Modelica.Media.Interfaces.PartialMixtureMedium.X_default[2]
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # vol.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # vol.state_default.T
  0 1.0000000000000000E-002       0                       1                
  6  1280   # vol.state_default.X[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # vol.state_default.X[2]
  0 1.2000000000000000E+000       0                 1.0000000000000000E+100
  6  1280   # vol.rho_default
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # vol.state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # vol.state_start.T
  0       0                       0                       1                
  6  1280   # vol.state_start.X[1]
  0       0                       0                       1                
  6  1280   # vol.state_start.X[2]
  0       0                       0                       0                
  6  1281   # vol.useSteadyStateTwoPort
  0       0                       0                       0                
  6  1280   # vol.masExc.k
  0       0                       0                       0                
  6  1280   # vol.masExc.y
  0       0                       0                       0                
  6   256   # theCon.dT
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   260   # theCon.port_a.T
  0       0                       0                       0                
  6   256   # theCon.G
  0       0                       0                       0                
  6   388   # TVol.port.Q_flow
  0       4                       1                       4                
  6   258   # fan.energyDynamics
  0       4                       1                       4                
  6   258   # fan.massDynamics
  0       4                       1                       4                
  6   258   # fan.substanceDynamics
  0       4                       1                       4                
  6   258   # fan.traceDynamics
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1   280   # fan.p_start
 -1 2.9314999999999998E+002       1                   10000                
  1   280   # fan.T_start
 -1 1.0000000000000000E-002       0                       1                
  1   280   # fan.X_start[1]
 -1 9.8999999999999999E-001       0                       1                
  1   280   # fan.X_start[2]
  0       1                       1                 1.0000000000000000E+100
  6   256   # fan.mSenFac
  0       1                       0                       0                
  6   257   # fan.allowFlowReversal
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6   260   # fan.port_a.p
  0       0                       0                 1.0000000000000000E+008
  6   260   # fan.port_b.p
 -1       0                       0                       0                
  1  1305   # fan.port_a_exposesState
 -1       0                       0                       0                
  1  1305   # fan.port_b_exposesState
  0       0                       0                       0                
  6  1281   # fan.showDesignFlowDirection
  0 1.9439999999999999E-001       0                       0                
  6   256   # fan.m_flow_nominal
  0 1.9440000000000000E-005       0                 1.0000000000000000E+100
  6   256   # fan.m_flow_small
  0       0                       0                       0                
  6   257   # fan.show_T
  0       0                       0                       0                
  6   256   # fan.dp
  0       4                       1                       4                
  6   258   # fan.vol.energyDynamics
  0       4                       1                       4                
  6   258   # fan.vol.massDynamics
  0       4                       1                       4                
  6   258   # fan.vol.substanceDynamics
  0       4                       1                       4                
  6   258   # fan.vol.traceDynamics
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6   256   # fan.vol.p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # fan.vol.T_start
  0       0                       0                       1                
  6   256   # fan.vol.X_start[1]
  0       0                       0                       1                
  6   256   # fan.vol.X_start[2]
  0       1                       1                 1.0000000000000000E+100
  6   256   # fan.vol.mSenFac
  0       1                       0                       0                
  6   769   # fan.vol.initialize_p
  0       1                       0                       0                
  6   257   # fan.vol.prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # fan.vol.simplify_mWat_flow
  0 1.9439999999999999E-001       0                 1.0000000000000000E+100
  6   256   # fan.vol.m_flow_nominal
  0       2                       0                       0                
  6   258   # fan.vol.nPorts
  0 1.9440000000000000E-005       0                 1.0000000000000000E+100
  6   256   # fan.vol.m_flow_small
  0       1                       0                       0                
  6   257   # fan.vol.allowFlowReversal
  0       0                       0                       0                
  6   256   # fan.vol.V
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6   260   # fan.vol.ports[1].p
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6   260   # fan.vol.ports[2].p
  0       0                       0                       0                
  6   388   # fan.vol.heatPort.Q_flow
  0 1.0132500000000000E+005       0                       0                
  6   256   # fan.vol.p
  0       0                       0                       1                
  6   256   # fan.vol.Xi[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # fan.vol.rho_start
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # fan.vol.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # fan.vol.state_default.T
  0 1.0000000000000000E-002       0                       1                
  6  1280   # fan.vol.state_default.X[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # fan.vol.state_default.X[2]
  0 1.2000000000000000E+000       0                 1.0000000000000000E+100
  6  1280   # fan.vol.rho_default
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # fan.vol.state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # fan.vol.state_start.T
  0       0                       0                       1                
  6  1280   # fan.vol.state_start.X[1]
  0       0                       0                       1                
  6  1280   # fan.vol.state_start.X[2]
  0       1                       0                       0                
  6  1281   # fan.vol.useSteadyStateTwoPort
  0 4.5300945000000000E+004       0                       0                
  6  1280   # fan.vol.hOut_internal
  0       0                       0                       0                
  6  1280   # fan.vol.QSen_flow.y
  0       0                       0                       0                
  6  1280   # fan.vol.masExc.k
  0       0                       0                       0                
  6  1280   # fan.vol.masExc.y
  0       0                       0                       0                
  6   256   # fan.vol.tau
  0       0                       0                       0                
  6  1280   # fan.vol.V_nominal
  0       1                       0                       0                
  6   257   # fan.dynamicBalance
  0       0                       0                       0                
  6   257   # fan.addPowerToMedium
 -1       1                       0                       0                
  1   280   # fan.tau
  0     300                       1                   10000                
  6   260   # fan.heatPort.T
  0       0                       0                       0                
  6   388   # fan.heatPort.Q_flow
  0       0                       0                 1.0000000000000000E+100
  6  1280   # fan.rho_in
  0       1                       0                       0                
  6  1281   # fan.preSou.allowFlowReversal
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1284   # fan.preSou.port_a.p
  0       0                       0                       0                
  6  1281   # fan.preSou.port_a_exposesState
  0       0                       0                       0                
  6  1281   # fan.preSou.port_b_exposesState
 -1       1                       0                       0                
  1  1305   # fan.preSou.showDesignFlowDirection
 -1       0                       0                 1.0000000000000000E+008
  1  1304   # fan.preSou.dp_start
  0       0                 -100000                  100000                
  6  1280   # fan.preSou.m_flow_start
  0 1.9440000000000000E-005 -100000                  100000                
  6  1280   # fan.preSou.m_flow_small
  0       0                       0                       0                
  6  1281   # fan.preSou.show_T
  0       1                       0                       0                
  6  1281   # fan.preSou.show_V_flow
  0       0                       0                       0                
  6  1280   # fan.preSou.dp
  0       0                       0                       0                
  6  1280   # fan.preSou.V_flow
  0       1                       0                       0                
  6  1281   # fan.preSou.control_m_flow
  0       0                       0                       0                
  6  1280   # fan.preSou.dp_internal
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # fan.sta_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # fan.sta_start.T
  0       0                       0                       1                
  6  1280   # fan.sta_start.X[1]
  0       0                       0                       1                
  6  1280   # fan.sta_start.X[2]
  0       0                       0                       0                
  6  1280   # fan.h_outflow_start
  0       0                       0                       0                
  6   257   # fan.use_powerCharacteristic
 -1       1                       0                       0                
  1   281   # fan.motorCooledByFluid
  0       1                       0                       0                
  6   257   # fan.homotopyInitialization
  0 1.2000000000000000E+000       0                 1.0000000000000000E+100
  6   256   # fan.rho_default
  0       0                       0                       0                
  6   256   # fan.P
  0       0                       0                       0                
  6   256   # fan.WHyd
  0       0                       0                       0                
  6   256   # fan.WFlo
  0       0                       0                       0                
  6   256   # fan.Q_flow
  0       0                       0                       1                
  6   256   # fan.eta
  0       0                       0                       1                
  6   256   # fan.etaHyd
  0       0                       0                       1                
  6   256   # fan.etaMot
  0       0                       0                       0                
  6   256   # fan.VMachine_flow
  0       0                       0                 1.0000000000000000E+100
  6  1280   # fan._perPow.hydraulicEfficiency.V_flow[1]
  0       0                       0                       1                
  6  1280   # fan._perPow.hydraulicEfficiency.eta[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # fan._perPow.motorEfficiency.V_flow[1]
  0       0                       0                       1                
  6  1280   # fan._perPow.motorEfficiency.eta[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # fan._perPow.power.V_flow[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # fan._perPow.power.P[1]
  0       0                       0                       0                
  6  1281   # fan._perPow.motorCooledByFluid
  0       0                       0                       0                
  6  1281   # fan._perPow.use_powerCharacteristic
  0 1.6200000000000001E-004       0                       0                
  6  1280   # fan.delta_V_flow
  0       0                       0                       0                
  6  1280   # fan.motDer[1]
  0       0                       0                       0                
  6  1280   # fan.hydDer[1]
  0       0                       0                       0                
  6  1280   # fan.QThe_flow
  0       1                       0                       0                
  6   257   # fan.control_m_flow
 -1       0                       0                 1.0000000000000000E+100
  1   280   # fan.per.hydraulicEfficiency.V_flow[1]
 -1 6.9999999999999996E-001       0                       1                
  1   280   # fan.per.hydraulicEfficiency.eta[1]
 -1       0                       0                 1.0000000000000000E+100
  1   280   # fan.per.motorEfficiency.V_flow[1]
 -1 6.9999999999999996E-001       0                       1                
  1   280   # fan.per.motorEfficiency.eta[1]
 -1       0                       0                 1.0000000000000000E+100
  1   280   # fan.per.power.V_flow[1]
 -1       0                       0                 1.0000000000000000E+100
  1   280   # fan.per.power.P[1]
 -1       1                       0                       0                
  1   281   # fan.per.motorCooledByFluid
 -1       0                       0                       0                
  1   281   # fan.per.use_powerCharacteristic
  0       1                       0                       0                
  6   256   # fan.r_V
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # fan.p_a_default
  0 1.6200000000000001E-001       0                       0                
  6  1280   # fan.V_flow_max
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # fan.sta_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # fan.sta_default.T
  0 1.0000000000000000E-002       0                       1                
  6  1280   # fan.sta_default.X[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # fan.sta_default.X[2]
  0       1                       0                       0                
  6   257   # fan.filteredSpeed
 -1      30                       0                       0                
  1   280   # fan.riseTime
  0       4                       1                       4                
  6   258   # fan.init
 -1       0                       0                 1.0000000000000000E+100
  1   280   # fan.m_flow_start
  0 1.9439999999999999E-001       0                       0                
  6   256   # fan.m_flow_in
  0 1.9439999999999999E-001       0                       0                
  6  1280   # fan.filter.u
  0       1                       1                       4                
  6  1282   # fan.filter.analogFilter
  0       1                       1                       4                
  6  1282   # fan.filter.filterType
  0       2                       1                 1.0000000000000000E+100
  6  1282   # fan.filter.order
  0       0                       0                       0                
  6  1280   # fan.filter.f_cut
 -1       1                       0                       0                
  1  1304   # fan.filter.gain
 -1 5.0000000000000000E-001       0                       0                
  1  1304   # fan.filter.A_ripple
 -1       0                       0                       0                
  1  1304   # fan.filter.f_min
 -1       1                       0                       0                
  1  1305   # fan.filter.normalized
  0       4                       1                       4                
  6  1282   # fan.filter.init
  0       2                       0                       0                
  6  1282   # fan.filter.nx
 -1       0                       0                       0                
  1  1304   # fan.filter.x_start[1]
 -1       0                       0                       0                
  1  1304   # fan.filter.x_start[2]
  0       0                       0                       0                
  6  1280   # fan.filter.y_start
  0 1.9439999999999999E-001       0                       0                
  6  1280   # fan.filter.u_nominal
 -1       0                       0                       0                
  2  1296   # fan.filter.x[1]
  0       0                       0                       0                
  3  1280   # fan.filter.der(x[1])
 -1       0                       0                       0                
  2  1296   # fan.filter.x[2]
  0       0                       0                       0                
  3  1280   # fan.filter.der(x[2])
  0       2                       0                       0                
  6  1282   # fan.filter.ncr
  0       0                       0                       0                
  6  1282   # fan.filter.nc0
  0       0                       0                       0                
  6  1282   # fan.filter.na
  0       2                       0                       0                
  6  1282   # fan.filter.nr
  0       0                       0                       0                
  6  1280   # fan.filter.cr[1]
  0       0                       0                       0                
  6  1280   # fan.filter.cr[2]
  0       0                       0                       0                
  6  1280   # fan.filter.r[1]
  0       0                       0                       0                
  6  1280   # fan.filter.r[2]
  0       1                       0                       0                
  6  1280   # fan.filter.uu[1]
 -1       4                       0                       0                
  1   280   # TSet.amplitude
 -1      50                 9.9999999999999997E-061     100                
  1   280   # TSet.width
 -1   86400                 9.9999999999999997E-061 1.0000000000000000E+100
  1   280   # TSet.period
 -1      -1                       0                       0                
  1   282   # TSet.nperiod
 -1 2.8914999999999998E+002       0                       0                
  1   280   # TSet.offset
 -1   25200                       0                       0                
  1   280   # TSet.startTime
  0       0                       0                       0                
  6   320   # TSet.y
  0       0                       0                       0                
  6  1280   # TSet.T_width
  0       0                       0                       0                
  6  1344   # TSet.T_start
  0       0                       0                       0                
  6  1346   # TSet.count
  0       0                       0                       0                
  6   256   # conPI.y
  0       0                       0                       0                
  6   256   # conPI.controlError
  0       2                       1                       4                
  6   258   # conPI.controllerType
 -1       1                       0                 1.0000000000000000E+100
  1   280   # conPI.k
 -1     120                 9.9999999999999997E-061 1.0000000000000000E+100
  1   280   # conPI.Ti
 -1 1.0000000000000001E-001       0                 1.0000000000000000E+100
  1   280   # conPI.Td
 -1       1                       0                       0                
  1   280   # conPI.yMax
 -1       0                       0                       0                
  1   280   # conPI.yMin
 -1       1                       0                 1.0000000000000000E+100
  1   280   # conPI.wp
 -1       0                       0                 1.0000000000000000E+100
  1   280   # conPI.wd
 -1 9.0000000000000002E-001 1.0000000000000000E-013 1.0000000000000000E+100
  1   280   # conPI.Ni
 -1      10                 1.0000000000000000E-013 1.0000000000000000E+100
  1   280   # conPI.Nd
  0       5                       1                       5                
  6   258   # conPI.initType
  0       1                       0                       0                
  6   257   # conPI.limitsAtInit
 -1       0                       0                       0                
  1   280   # conPI.xi_start
 -1       0                       0                       0                
  1   280   # conPI.xd_start
 -1       0                       0                       0                
  1   280   # conPI.y_start
  0       0                       0                       0                
  6   257   # conPI.strict
  0       1                       0                       0                
  6   768   # conPI.unitTime
  0       0                       0                       0                
  6   256   # conPI.addP.y
  0       0                       0                       0                
  6   256   # conPI.addP.k1
  0       0                       0                       0                
  6   256   # conPI.addP.k2
 -1       1                       0                       0                
  1   280   # conPI.P.k
  0       0                       0                       0                
  6   256   # conPI.P.y
  0       1                       0                       0                
  6   256   # conPI.gainPID.k
  0       0                       0                       0                
  6   256   # conPI.gainPID.u
  0       0                       0                       0                
  6   256   # conPI.gainPID.y
 -1       1                       0                       0                
  1   280   # conPI.addPID.k1
 -1       1                       0                       0                
  1   280   # conPI.addPID.k2
 -1       1                       0                       0                
  1   280   # conPI.addPID.k3
  0       1                       0                       0                
  6   256   # conPI.limiter.uMax
  0       0                       0                       0                
  6   256   # conPI.limiter.uMin
  0       0                       0                       0                
  6   257   # conPI.limiter.strict
  0       1                       0                       0                
  6   257   # conPI.limiter.limitsAtInit
  0       1                       0                       0                
  6   769   # conPI.with_I
  0       0                       0                       0                
  6   769   # conPI.with_D
 -1       0                       0                       0                
  1   280   # conPI.Dzero.k
 -1       0                       0                       0                
  1   281   # conPI.reverseAction
  0       0                       0                       0                
  6  1280   # conPI.revAct
  0 1.9439999999999999E-001       0                       0                
  6   256   # mFan_flow.k
  0 1.9439999999999999E-001       0                       0                
  6   256   # mFan_flow.y
  0       1                       0                       0                
  6   258   # bou.nPorts
  0 1.0132500000000000E+005       0                 1.0000000000000000E+100
  6   256   # bou.medium.p
  0       1                       0                  100000                
  6   256   # bou.medium.d
  0 9.8999999999999999E-001       0                       1                
  6   256   # bou.medium.X[2]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6   256   # bou.medium.u
  0    1000                       0                 1.0000000000000000E+007
  6   256   # bou.medium.R
  0 3.2000000000000001E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6   256   # bou.medium.MM
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6   256   # bou.medium.state.p
  0       0                       0                       0                
  6   257   # bou.medium.preferredMediumStates
  0       1                       0                       0                
  6   257   # bou.medium.standardOrderComponents
  0       0                       0                       0                
  6   256   # bou.medium.T_degC
  0       0                       0                       0                
  6   256   # bou.medium.p_bar
  0 1.8015280000000002E-002       0                 1.0000000000000000E+100
  6  1280   # bou.medium.MMX[1]
  0 2.8965115900000001E-002       0                 1.0000000000000000E+100
  6  1280   # bou.medium.MMX[2]
  0       0                       0                       1                
  6  1280   # bou.medium.X_air
  0       0                       0                       0                
  6  1280   # bou.medium.dT
  0       0                 -9.9999999999999995E+059 9.9999999999999995E+059
  6   388   # bou.ports[1].m_flow
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6   260   # bou.ports[1].p
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # bou.ports[1].h_outflow
  0       3                       1                       3                
  6  1282   # bou.flowDirection
  0       1                       0                       0                
  6   257   # bou.use_p
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6   256   # bou.p
 -1 1.2000000000000000E+000       0                  100000                
  1   280   # bou.d
  0       1                       0                       0                
  6   257   # bou.use_T
 -1 2.9314999999999998E+002       1                   10000                
  1   280   # bou.T
 -1 4.5300945000000000E+004 -1.0000000000000000E+010 1.0000000000000000E+010
  1   280   # bou.h
 -1 1.0000000000000000E-002       0                       1                
  1   280   # bou.X[1]
 -1 9.8999999999999999E-001       0                       1                
  1   280   # bou.X[2]
  0       1                       0                       0                
  6   257   # THeaOut.allowFlowReversal
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6   260   # THeaOut.port_a.p
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6   260   # THeaOut.port_b.p
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # THeaOut.port_b.h_outflow
 -1       0                       0                       0                
  1  1305   # THeaOut.port_a_exposesState
 -1       0                       0                       0                
  1  1305   # THeaOut.port_b_exposesState
 -1       1                       0                       0                
  1  1305   # THeaOut.showDesignFlowDirection
  0 1.9439999999999999E-001       0                 1.0000000000000000E+100
  6   256   # THeaOut.m_flow_nominal
  0 1.9440000000000000E-005       0                 1.0000000000000000E+100
  6   256   # THeaOut.m_flow_small
  0       1                       0                 1.0000000000000000E+100
  6   256   # THeaOut.tau
  0       3                       1                       4                
  6   258   # THeaOut.initType
  0       1                       0                       0                
  6  1280   # THeaOut.k
  0       1                       0                       0                
  6  1281   # THeaOut.dynamic
  0       0                       0                       0                
  6  1280   # THeaOut.mNor_flow
 -1       0                       0                 1.0000000000000000E+100
  2   272   # THeaOut.T
  0       0                       0                       0                
  3   256   # THeaOut.der(T)
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # THeaOut.T_start
  0       0                       0                       0                
  6   257   # THeaOut.transferHeat
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # THeaOut.TAmb
 -1    1200                       1                 1.0000000000000000E+100
  1   280   # THeaOut.tauHeaTra
  0       0                       0                       0                
  6  1280   # THeaOut.tauHeaTraInv
  0       0                       0                       0                
  6  1280   # THeaOut.tauInv
  0     300                       1                   10000                
  6  1280   # THeaOut.TMed
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # THeaOut.T_a_inflow
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # THeaOut.T_b_inflow
  0       1                       0                       0                
  6   257   # hea.allowFlowReversal
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6   260   # hea.port_b.p
 -1       0                       0                       0                
  1  1305   # hea.port_a_exposesState
 -1       0                       0                       0                
  1  1305   # hea.port_b_exposesState
 -1       1                       0                       0                
  1  1305   # hea.showDesignFlowDirection
  0 1.9439999999999999E-001       0                       0                
  6   256   # hea.m_flow_nominal
  0 1.9440000000000000E-005       0                 1.0000000000000000E+100
  6   256   # hea.m_flow_small
  0       0                       0                       0                
  6   257   # hea.show_T
  0       0                       0                       0                
  6   256   # hea.dp
  0       1                       0                       0                
  6   257   # hea.computeFlowResistance
  0       0                       0                       0                
  6   257   # hea.from_dp
  0    1000                       0                 1.0000000000000000E+100
  6   256   # hea.dp_nominal
  0       0                       0                       0                
  6   257   # hea.linearizeFlowResistance
  0 1.0000000000000001E-001       0                       0                
  6   256   # hea.deltaM
  0    1080                       0                       0                
  6   256   # hea.Q_flow_maxHeat
  0       0                       0                       0                
  6   256   # hea.Q_flow_maxCool
 -1      10                       0                 1.0000000000000000E+100
  1   280   # hea.tau
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # hea.T_start
  0       2                       1                       4                
  6   258   # hea.energyDynamics
  0       1                       0                       0                
  6   257   # hea.homotopyInitialization
  0       0                       0                       0                
  6   256   # hea.TSet
  0       0                       0                       0                
  6   256   # hea.Q_flow
  0       1                       0                       0                
  6  1281   # hea.preDro.allowFlowReversal
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1284   # hea.preDro.port_b.p
 -1       0                       0                       0                
  1  1305   # hea.preDro.port_a_exposesState
 -1       0                       0                       0                
  1  1305   # hea.preDro.port_b_exposesState
 -1       1                       0                       0                
  1  1305   # hea.preDro.showDesignFlowDirection
  0 1.9439999999999999E-001       0                       0                
  6  1280   # hea.preDro.m_flow_nominal
  0 1.9440000000000000E-005       0                 1.0000000000000000E+100
  6  1280   # hea.preDro.m_flow_small
  0       0                       0                       0                
  6  1281   # hea.preDro.show_T
  0       0                       0                       0                
  6  1280   # hea.preDro.dp
  0       0                       0                       0                
  6  1281   # hea.preDro.from_dp
  0    1000                       0                       0                
  6  1280   # hea.preDro.dp_nominal
  0       1                       0                       0                
  6  1281   # hea.preDro.homotopyInitialization
  0       0                       0                       0                
  6  1281   # hea.preDro.linearized
  0 1.9439999999999999E-002       0                 1.0000000000000000E+100
  6  1280   # hea.preDro.m_flow_turbulent
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1  1304   # hea.preDro.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # hea.preDro.sta_default.T
 -1 1.0000000000000000E-002       0                       1                
  1  1304   # hea.preDro.sta_default.X[1]
 -1 9.8999999999999999E-001       0                       1                
  1  1304   # hea.preDro.sta_default.X[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # hea.preDro.eta_default
  0 1.9439999999999999E-001       0                       0                
  6  1280   # hea.preDro.m_flow_nominal_pos
  0    1000                       0                       0                
  6  1280   # hea.preDro.dp_nominal_pos
  0       0                       0                       0                
  6  1281   # hea.preDro.use_dh
 -1       1                       0                       0                
  1  1304   # hea.preDro.dh
 -1    4000                       0                 1.0000000000000000E+100
  1  1304   # hea.preDro.ReC
  0 1.0000000000000001E-001 1.0000000000000000E-002 1.0000000000000000E+100
  6  1280   # hea.preDro.deltaM
  0 6.1474677713673296E-003       0                       0                
  6  1280   # hea.preDro.k
  0       1                       0                       0                
  6  1281   # hea.preDro.computeFlowResistance
  0       1                       0                       0                
  6  1281   # hea.heaCoo.allowFlowReversal
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1284   # hea.heaCoo.port_a.p
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1284   # hea.heaCoo.port_b.p
  0       0                       0                       0                
  6  1281   # hea.heaCoo.port_a_exposesState
  0       0                       0                       0                
  6  1281   # hea.heaCoo.port_b_exposesState
 -1       1                       0                       0                
  1  1305   # hea.heaCoo.showDesignFlowDirection
  0       0                       0                 1.0000000000000000E+008
  6  1280   # hea.heaCoo.dp_start
 -1       0                 -100000                  100000                
  1  1304   # hea.heaCoo.m_flow_start
  0 1.9440000000000000E-005 -100000                  100000                
  6  1280   # hea.heaCoo.m_flow_small
  0       0                       0                       0                
  6  1281   # hea.heaCoo.show_T
  0       0                       0                       0                
  6  1281   # hea.heaCoo.show_V_flow
  0       0                       0                       0                
  6  1280   # hea.heaCoo.dp
  0    1080                       0                       0                
  6  1280   # hea.heaCoo.Q_flow_maxHeat
  0       0                       0                       0                
  6  1280   # hea.heaCoo.Q_flow_maxCool
  0 1.9439999999999999E-001       0                       0                
  6  1280   # hea.heaCoo.m_flow_nominal
  0       0                       0                 1.0000000000000000E+100
  6  1280   # hea.heaCoo.tau
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6  1280   # hea.heaCoo.T_start
  0       2                       1                       4                
  6  1282   # hea.heaCoo.energyDynamics
 -1 1.0145400000000000E+003       0                       0                
  1  1304   # hea.heaCoo.cp_default
  0       1                       0                       0                
  6  1281   # hea.heaCoo.restrictHeat
  0       1                       0                       0                
  6  1281   # hea.heaCoo.restrictCool
  0       0                       0                       0                
  6  1280   # hea.heaCoo.deltah
  0       0                       0                       0                
  6  1281   # hea.heaCoo.dynamic
  0       0                       0                       0                
  6  1280   # hea.heaCoo.m_flow_pos
  0       0                       0                       0                
  6  1280   # hea.heaCoo.m_flow_limited
  0       0                       0                       0                
  6  1280   # hea.heaCoo.hSet
 -1 2.8814999999999998E+002       0                 1.0000000000000000E+100
  2  1296   # hea.heaCoo.T
  0       0                       0                       0                
  3  1280   # hea.heaCoo.der(T)
  0       0                       0                       0                
  6  1280   # hea.heaCoo.dhSetAct
  0       1                       0                       0                
  6  1280   # hea.heaCoo.k
  0       0                       0                       0                
  6  1280   # hea.heaCoo.mNor_flow
 -1       0                       0                       0                
  1   280   # tab.table[1, 1]
 -1 2.8814999999999998E+002       0                       0                
  1   280   # tab.table[1, 2]
 -1       1                       0                       0                
  1   280   # tab.table[2, 1]
 -1 3.0314999999999998E+002       0                       0                
  1   280   # tab.table[2, 2]
 -1       0                       0                       0                
  1   280   # tab.offset
  0       1                       0                       0                
  6   257   # tab.constantExtrapolation
  0       4                       0                       0                
  6  1282   # tab.nCol
  0       0                       0                       0                
  6  1280   # tab.offsetVector[1, 1]
  0       0                       0                       0                
  6  1280   # tab.offsetVector[1, 2]
  0       0                       0                       0                
  6  1280   # tab.offsetVector[2, 1]
  0       0                       0                       0                
  6  1280   # tab.offsetVector[2, 2]
  0       0                       0                       0                
  6  1280   # tab.offsetVector[3, 1]
  0       0                       0                       0                
  6  1280   # tab.offsetVector[3, 2]
  0       0                       0                       0                
  6  1280   # tab.offsetVector[4, 1]
  0       0                       0                       0                
  6  1280   # tab.offsetVector[4, 2]
  0       1                       0                       0                
  6  1282   # tab.tab.n
  0       0                       0                       0                
  6  1281   # tab.tab.tableOnFile
  0       0                       0                       0                
  6  1280   # tab.tab.table[1, 1]
  0       0                       0                       0                
  6  1280   # tab.tab.table[1, 2]
  0       0                       0                       0                
  6  1280   # tab.tab.table[2, 1]
  0       0                       0                       0                
  6  1280   # tab.tab.table[2, 2]
  0       0                       0                       0                
  6  1280   # tab.tab.table[3, 1]
  0       0                       0                       0                
  6  1280   # tab.tab.table[3, 2]
  0       0                       0                       0                
  6  1280   # tab.tab.table[4, 1]
  0       0                       0                       0                
  6  1280   # tab.tab.table[4, 2]
 -1       1                       0                       0                
  1  1305   # tab.tab.verboseRead
  0       2                       0                       0                
  6  1282   # tab.tab.columns[1]
  0       1                       1                       3                
  6  1282   # tab.tab.smoothness
  0       0                       0                       0                
  6  1282   # tab.tab.tableID.id
  0       0                       0                       0                
  6  1280   # tab.tab.tableOnFileRead
  0       2                       1                       4                
  6   258   # vol.dynBal.energyDynamics
  0       2                       1                       4                
  6   258   # vol.dynBal.massDynamics
  0       2                       1                       4                
  6   258   # vol.dynBal.substanceDynamics
  0       2                       1                       4                
  6   258   # vol.dynBal.traceDynamics
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6   256   # vol.dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # vol.dynBal.T_start
  0       0                       0                       1                
  6   256   # vol.dynBal.X_start[1]
  0       0                       0                       1                
  6   256   # vol.dynBal.X_start[2]
  0       2                       1                 1.0000000000000000E+100
  6   256   # vol.dynBal.mSenFac
  0       1                       0                       0                
  6   769   # vol.dynBal.initialize_p
  0       1                       0                       0                
  6   257   # vol.dynBal.simplify_mWat_flow
  0       3                       0                       0                
  6   258   # vol.dynBal.nPorts
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6   260   # vol.dynBal.ports[1].p
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6   260   # vol.dynBal.ports[2].p
  0       0                 -100000                  100000                
  6   388   # vol.dynBal.ports[3].m_flow
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6   260   # vol.dynBal.ports[3].p
  0 1.0132500000000000E+005       0                 1.0000000000000000E+100
  6   256   # vol.dynBal.medium.p
  0       0                       0                  100000                
  6   256   # vol.dynBal.medium.d
  0     300                       1                   10000                
  6   256   # vol.dynBal.medium.T
  0       0                       0                       1                
  6   256   # vol.dynBal.medium.X[2]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6   256   # vol.dynBal.medium.u
  0    1000                       0                 1.0000000000000000E+007
  6   256   # vol.dynBal.medium.R
  0 3.2000000000000001E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6   256   # vol.dynBal.medium.MM
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6   256   # vol.dynBal.medium.state.p
  0       0                       0                       0                
  6   257   # vol.dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6   257   # vol.dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6   256   # vol.dynBal.medium.T_degC
  0       0                       0                       0                
  6   256   # vol.dynBal.medium.p_bar
  0 1.8015280000000002E-002       0                 1.0000000000000000E+100
  6  1280   # vol.dynBal.medium.MMX[1]
  0 2.8965115900000001E-002       0                 1.0000000000000000E+100
  6  1280   # vol.dynBal.medium.MMX[2]
  0       0                       0                       1                
  6  1280   # vol.dynBal.medium.X_air
  0       0                       0                       0                
  6  1280   # vol.dynBal.medium.dT
 -1       0                       0                       0                
  2   272   # vol.dynBal.U
  0       0                       0                       0                
  3   256   # vol.dynBal.der(U)
  0       0                       0                 1.0000000000000000E+100
  6   256   # vol.dynBal.m
  0       0                       0                       0                
  6   256   # vol.dynBal.der(m)
 -1       0                       0                 1.0000000000000000E+100
  2   272   # vol.dynBal.mXi[1]
  0       0                       0                       0                
  3   256   # vol.dynBal.der(mXi[1])
  0       0                       0                       0                
  6   256   # vol.dynBal.mb_flow
  0       0                       0                       0                
  6   256   # vol.dynBal.Hb_flow
  0 9.7200000000000003E+001       0                       0                
  6   256   # vol.dynBal.fluidVolume
  0 1.1833594559999999E+005       0                       0                
  6   256   # vol.dynBal.CSen
  0       0                       0                       0                
  6   256   # vol.dynBal.mWat_flow
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # vol.dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # vol.dynBal.ports_H_flow[2]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # vol.dynBal.ports_H_flow[3]
  0       0                       0                       0                
  6  1280   # vol.dynBal.ports_mXi_flow[1, 1]
  0       0                       0                       0                
  6  1280   # vol.dynBal.ports_mXi_flow[2, 1]
  0       0                       0                       0                
  6  1280   # vol.dynBal.ports_mXi_flow[3, 1]
  0 1.0145400000000000E+003       0                       0                
  6  1280   # vol.dynBal.cp_default
  0       0                       0                 1.0000000000000000E+100
  6  1280   # vol.dynBal.rho_start
  0       1                       0                       0                
  6  1281   # vol.dynBal.computeCSen
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # vol.dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # vol.dynBal.state_default.T
  0 1.0000000000000000E-002       0                       1                
  6  1280   # vol.dynBal.state_default.X[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # vol.dynBal.state_default.X[2]
  0 1.2000000000000000E+000       0                 1.0000000000000000E+100
  6  1280   # vol.dynBal.rho_default
  0       1                       0                       0                
  6  1280   # vol.dynBal.s[1]
  0       0                       0                       0                
  6  1280   # vol.dynBal.hStart
  0       1                       0                       0                
  6  1281   # fan.vol.steBal.allowFlowReversal
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1284   # fan.vol.steBal.port_a.p
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1284   # fan.vol.steBal.port_b.p
 -1       0                       0                       0                
  1  1305   # fan.vol.steBal.port_a_exposesState
 -1       0                       0                       0                
  1  1305   # fan.vol.steBal.port_b_exposesState
 -1       0                       0                       0                
  1  1305   # fan.vol.steBal.showDesignFlowDirection
  0 1.9439999999999999E-001       0                       0                
  6  1280   # fan.vol.steBal.m_flow_nominal
  0 1.9440000000000000E-005       0                 1.0000000000000000E+100
  6  1280   # fan.vol.steBal.m_flow_small
  0       0                       0                       0                
  6  1281   # fan.vol.steBal.show_T
  0       0                       0                       0                
  6  1280   # fan.vol.steBal.dp
  0       1                       0                       0                
  6  1281   # fan.vol.steBal.sensibleOnly
  0       1                       0                       0                
  6  1281   # fan.vol.steBal.simplify_mWat_flow
  0       1                       0                       0                
  6  1281   # fan.vol.steBal.prescribedHeatFlowRate
  0       0                       0                       0                
  6  1280   # fan.vol.steBal.Q_flow
  0       0                       0                       0                
  6  1280   # fan.vol.steBal.mWat_flow
  0       1                       0                       0                
  6  1280   # fan.vol.steBal.s[1]
  0       0                       0                       0                
  6  1280   # fan.vol.steBal.m_flowInv
  0       0                       0                       0                
  6  1280   # fan.vol.steBal.mXi_flow[1]
  0 1.9440000000000001E-008       0                       0                
  6  1280   # fan.vol.steBal.deltaReg
  0 5.1440329218106993E+007       0                       0                
  6  1280   # fan.vol.steBal.deltaInvReg
  0 -7.7160493827160490E+008       0                       0                
  6  1280   # fan.vol.steBal.aReg
  0 3.1488678893800064E+017       0                       0                
  6  1280   # fan.vol.steBal.bReg
  0 -4.9138106825836968E+025       0                       0                
  6  1280   # fan.vol.steBal.cReg
  0 3.7390064528397536E+033       0                       0                
  6  1280   # fan.vol.steBal.dReg
  0 -1.3686811740716720E+041       0                       0                
  6  1280   # fan.vol.steBal.eReg
  0 1.9268849104322865E+048       0                       0                
  6  1280   # fan.vol.steBal.fReg
  0       0                       0                       0                
  6   256   # conPI.I.k
  0       3                       1                       4                
  6   258   # conPI.I.initType
  0       0                       0                       0                
  6   256   # conPI.I.y_start
  0       0                       0                       0                
  6   256   # conPI.I.u
 -1       0                       0                       0                
  2   272   # conPI.I.y
  0       0                       0                       0                
  3   256   # conPI.I.der(y)
  0       0                       0                       0                
  6   256   # conPI.addI.k1
  0       0                       0                       0                
  6   256   # conPI.addI.k2
 -1       1                       0                       0                
  1   280   # conPI.addI.k3
  0       0                       0                       0                
  6   256   # conPI.addI.u3
  0       0                       0                       0                
  6   256   # conPI.addSat.y
 -1       1                       0                       0                
  1   280   # conPI.addSat.k1
 -1      -1                       0                       0                
  1   280   # conPI.addSat.k2
  0       1                       0                       0                
  6   256   # conPI.gainTrack.k


# Matrix with 6 columns defining the initial value calculation
# (columns 5 and 6 are not utilized for the calculation but are
#  reported by dymosim via dymosim -i for user convenience):
#
# column 1: Type of initial value
#           = -2: special case: for continuing simulation (column 2 = value)
#           = -1: fixed value (column 2 = fixed value)
#           =  0: free value, i.e., no restriction (column 2 = initial value)
#           >  0: desired value (column 1 = weight for optimization
#                                column 2 = desired value)
#                 use weight=1, since automatic scaling usually
#                 leads to equally weighted terms
# column 2: fixed, free or desired value according to column 1.
# column 3: Minimum value (ignored, if Minimum >= Maximum).
# column 4: Maximum value (ignored, if Minimum >= Maximum).
#           Minimum and maximum restrict the search range in initial
#           value calculation. They might also be used for scaling.
# column 5: Category of variable.
#           = 1: parameter.
#           = 2: state.
#           = 3: state derivative.
#           = 4: output.
#           = 5: input.
#           = 6: auxiliary variable.
# column 6: Data type of variable.
#           = 0: real.
#           = 1: boolean.
#           = 2: integer.
#
# Initial values are calculated according to the following procedure:
#
# - If parameters, states and inputs are FIXED, and other variables
#   are FREE, no special action takes place (default setting).
#
# - If there are only FIXED and FREE variables and the number of
#   FREE parameters, states and inputs is IDENTICAL to the number of
#   FIXED state derivatives, outputs and auxiliary variables, a non-linear
#   equation is solved to determine a consistent set of initial conditions.
#
# - In all other cases the following optimization problem is solved:
#      min( sum( weight(i)*( (value(i) - DESIRED(i))/scale(i) )^2 ) )
#   under the constraint that the differential equation is fulfilled
#   at the initial time. In most cases weight(i)=1 is sufficient, due
#   to the automatic scaling (if DESIRED(i) is not close to zero,
#   scale(i) = DESIRED(i). Otherwise, the scaling is based on the
#   nominal value (and maybe minimum and maximum values given in 
#   column 3 and 4). If these values are zero, scale(i)=1 is used).
#
char initialDescription(518,184)
Room volume [m3]
Nominal mass flow rate [kg/s]
Nominal heat loss of the room [W]
Formulation of energy balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of mass balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of substance balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of trace substance balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume [1]
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Mass flow rate from the connection point into the component [kg/s]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0 [kg/kg]
Thermodynamic pressure in the connection point [Pa|bar]
Mass flow rate from the connection point into the component [kg/s]
Thermodynamic pressure in the connection point [Pa|bar]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Pressure of the fluid [Pa|bar]
Density, used to compute start and guess values [kg/m3|g/cm3]
Default value for mass fractions of medium (for initialization) [kg/kg]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Constant output value [kg/s]
Connector of Real output signal [kg/s]
port_a.T - port_b.T [K,]
Port temperature [K|degC]
Constant thermal conductance of material [W/K]
Heat flow rate (positive if flowing from outside into the component) [W]
Formulation of energy balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of mass balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of substance balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of trace substance balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Thermodynamic pressure in the connection point [Pa|bar]
Thermodynamic pressure in the connection point [Pa|bar]
= true if port_a exposes the state of a fluid volume [:#(type=Boolean)]
= true if port_b.p exposes the state of a fluid volume [:#(type=Boolean)]
= false to hide the arrow in the model icon [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Formulation of energy balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of mass balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of substance balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of trace substance balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Thermodynamic pressure in the connection point [Pa|bar]
Thermodynamic pressure in the connection point [Pa|bar]
Heat flow rate (positive if flowing from outside into the component) [W]
Pressure of the fluid [Pa|bar]
Species concentration of the fluid [1]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Internal connector for leaving temperature of the component [J/kg]
Value of Real output [W]
Constant output value [kg/s]
Connector of Real output signal [kg/s]
Time constant at nominal flow [s]
Volume of delay element [m3]
Set to true to use a dynamic balance, which often leads to smaller systems of equations [:#(type=Boolean)]
Set to false to avoid any power (=heat and flow work) being added to medium (may give simpler equations) [:#(type=Boolean)]
Time constant of fluid volume for nominal flow, used if dynamicBalance=true [s]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Density of inflowing fluid [kg/m3|g/cm3]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Thermodynamic pressure in the connection point [Pa|bar]
= true if port_a exposes the state of a fluid volume [:#(type=Boolean)]
= true if port_b.p exposes the state of a fluid volume [:#(type=Boolean)]
= false to hide the arrow in the model icon [:#(type=Boolean)]
Guess value of dp = port_a.p - port_b.p [Pa|bar]
Guess value of m_flow = port_a.m_flow [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if temperatures at port_a and port_b are computed [:#(type=Boolean)]
= true, if volume flow rate at inflowing port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b (= port_a.p - port_b.p) [Pa|bar]
Volume flow rate at inflowing port (positive when flow from port_a to port_b) [m3/s]
= false to control dp instead of m_flow [:#(type=Boolean)]
Needed to connect to conditional connector [Pa]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Start value for outflowing enthalpy [J/kg]
Use powerCharacteristic (vs. efficiencyCharacteristic) [:#(type=Boolean)]
If true (and if addPowerToMedium = true), then motor heat is added to fluid stream [:#(type=Boolean)]
= true, use homotopy method [:#(type=Boolean)]
Fluid density at medium default state [kg/m3|g/cm3]
Electrical power consumed [W]
Hydraulic power input (converted to flow work and heat) [W]
Flow work [W]
Heat input from fan or pump to medium [W]
Global efficiency [1]
Hydraulic efficiency [1]
Motor efficiency [1]
Volume flow rate [m3/s]
Volumetric flow rate at user-selected operating points [m3/s]
Fan or pump efficiency at these flow rates [|1]
Volumetric flow rate at user-selected operating points [m3/s]
Fan or pump efficiency at these flow rates [|1]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump electrical power at these flow rates [W]
If true, then motor heat is added to fluid stream [:#(type=Boolean)]
Use powerCharacteristic instead of efficiencyCharacteristic [:#(type=Boolean)]
Factor used for setting heat input into medium to zero at very small flows [m3/s]
Coefficients for polynomial of pressure vs. flow rate
Coefficients for polynomial of pressure vs. flow rate
Heat input from fan or pump to medium [W]
= false to control head instead of m_flow [:#(type=Boolean)]
Volumetric flow rate at user-selected operating points [m3/s]
Fan or pump efficiency at these flow rates [|1]
Volumetric flow rate at user-selected operating points [m3/s]
Fan or pump efficiency at these flow rates [|1]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump electrical power at these flow rates [W]
If true, then motor heat is added to fluid stream [:#(type=Boolean)]
Use powerCharacteristic instead of efficiencyCharacteristic [:#(type=Boolean)]
Ratio V_flow/V_flow_max = V_flow/V_flow(dp=0, N=N_nominal) [1]
Nominal inlet pressure for predefined fan or pump characteristics [Pa|Pa]
Maximum volume flow rate [m3/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
= true, if speed is filtered with a 2nd order CriticalDamping filter [:#(type=Boolean)]
Rise time of the filter (time to reach 99.6 % of the speed) [s]
Type of initialization (no init/steady state/initial state/initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial value of mass flow rate [kg/s]
Prescribed mass flow rate [kg/s]
Connector of Real input signal [kg/s]
Analog filter characteristics (CriticalDamping/Bessel/Butterworth/ChebyshevI) [:#(type=Modelica.Blocks.Types.AnalogFilter)]
Type of filter (LowPass/HighPass/BandPass/BandStop) [:#(type=Modelica.Blocks.Types.FilterType)]
Order of filter [:#(type=Integer)]
Cut-off frequency [Hz]
Gain (= amplitude of frequency response at zero frequency)
Pass band ripple for Chebyshev filter (otherwise not used); > 0 required [dB]
Band of band pass/stop filter is f_min (A=-3db*gain) .. f_cut (A=-3db*gain) [Hz]
= true, if amplitude at f_cut = -3db, otherwise unmodified filter [:#(type=Boolean)]
Type of initialization (no init/steady state/initial state/initial output) [:#(type=Modelica.Blocks.Types.Init)]
[:#(type=Integer)]
Initial or guess values of states
Initial or guess values of states
Initial value of output [kg/s]
Nominal value of input (used for scaling the states) [kg/s]
Filter states
der(Filter states)
Filter states
der(Filter states)
[:#(type=Integer)]
[:#(type=Integer)]
[:#(type=Integer)]
[:#(type=Integer)]





Amplitude of pulse [K]
Width of pulse in % of period
Time for one period [s]
Number of periods (< 0 means infinite number of periods) [:#(type=Integer)]
Offset of output signals [K]
Output = offset for time < startTime [s]
Connector of Real output signal [K]
[s]
Start time of current period [s]
Period count [:#(type=Integer)]
Connector of actuator output signal
Control error (set point - measurement) [K]
Type of controller [:#(type=Modelica.Blocks.Types.SimpleController)]
Gain of controller [1]
Time constant of Integrator block [s]
Time constant of Derivative block [s]
Upper limit of output
Lower limit of output
Set-point weight for Proportional block (0..1)
Set-point weight for Derivative block (0..1)
Ni*Ti is time constant of anti-windup compensation
The higher Nd, the more ideal the derivative block
Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output) [:#(type=Modelica.Blocks.Types.InitPID)]
= false, if limits are ignored during initialization [:#(type=Boolean)]
Initial or guess value value for integrator output (= integrator state)
Initial or guess value for state of derivative block
Initial value of output
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
[s]
Connector of Real output signal
Gain of upper input
Gain of lower input
Gain value multiplied with input signal [1]
Output signal connector
Gain value multiplied with input signal [1]
Input signal connector
Output signal connector
Gain of upper input
Gain of middle input
Gain of lower input
Upper limits of input signals
Lower limits of input signals
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
= false, if limits are ignored during initialization (i.e., y=u) [:#(type=Boolean)]
[:#(type=Boolean)]
[:#(type=Boolean)]
Constant output value
Set to true for throttling the water flow rate through a cooling coil controller [:#(type=Boolean)]

Constant output value [kg/s]
Connector of Real output signal [kg/s]
Number of ports [:#(type=Integer)]
Absolute pressure of medium [Pa|bar]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
Absolute pressure of medium [Pa|bar]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Molar masses of components [kg/mol]
Molar masses of components [kg/mol]
Mass fraction of air [kg/kg]
Temperature difference used to compute enthalpy [K,]
Mass flow rate from the connection point into the component [kg/s]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Allowed flow direction [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
select p or d [:#(type=Boolean)]
Boundary pressure [Pa|bar]
Boundary density [kg/m3|g/cm3]
select T or h [:#(type=Boolean)]
Boundary temperature [K|degC]
Boundary specific enthalpy [J/kg]
Boundary mass fractions m_i/m [kg/kg]
Boundary mass fractions m_i/m [kg/kg]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Thermodynamic pressure in the connection point [Pa|bar]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
= true if port_a exposes the state of a fluid volume [:#(type=Boolean)]
= true if port_b.p exposes the state of a fluid volume [:#(type=Boolean)]
= false to hide the arrow in the model icon [:#(type=Boolean)]
Nominal mass flow rate, used for regularization near zero flow [kg/s]
For bi-directional flow, temperature is regularized in the region |m_flow| < m_flow_small (m_flow_small > 0 required) [kg/s]
Time constant at nominal flow rate [s]
Type of initialization (InitialState and InitialOutput are identical) [:#(type=Modelica.Blocks.Types.Init)]
Gain to take flow rate into account for sensor time constant [1]
Flag, true if the sensor is a dynamic sensor [:#(type=Boolean)]
Normalized mass flow rate [1]
Temperature of the passing fluid [K|degC]
der(Temperature of the passing fluid) [K/s]
Initial or guess value of output (= state) [K|degC]
if true, temperature T converges towards TAmb when no flow [:#(type=Boolean)]
Fixed ambient temperature for heat transfer [K|degC]
Time constant for heat transfer, default 20 minutes [s]
Dummy parameter to avoid division by tauLoss [1/s]
Dummy parameter to avoid division by tau [1/s]
Medium temperature to which the sensor is exposed [K|degC]
Temperature of inflowing fluid at port_a [K|degC]
Temperature of inflowing fluid at port_b, or T_a_inflow if uni-directional flow [K|degC]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Thermodynamic pressure in the connection point [Pa|bar]
= true if port_a exposes the state of a fluid volume [:#(type=Boolean)]
= true if port_b.p exposes the state of a fluid volume [:#(type=Boolean)]
= false to hide the arrow in the model icon [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
=true, compute flow resistance. Set to false to assume no friction [:#(type=Boolean)]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure difference [Pa|Pa]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Fraction of nominal flow rate where flow transitions to laminar [1]
Maximum heat flow rate for heating (positive) [W]
Maximum heat flow rate for cooling (negative) [W]
Time constant at nominal flow rate (used if energyDynamics <> Modelica.Fluid.Types.Dynamics.SteadyState) [s]
Initial or guess value of set point [K|degC]
Formulation of energy balance [:#(type=Modelica.Fluid.Types.Dynamics)]
= true, use homotopy method [:#(type=Boolean)]
Set point temperature of the fluid that leaves port_b [K|degC]
Heat added to the fluid (if flow is from port_a to port_b) [W]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Thermodynamic pressure in the connection point [Pa|bar]
= true if port_a exposes the state of a fluid volume [:#(type=Boolean)]
= true if port_b.p exposes the state of a fluid volume [:#(type=Boolean)]
= false to hide the arrow in the model icon [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure [Pa|bar]
Set to true to specify hydraulic diameter [:#(type=Boolean)]
Hydraulic diameter [m]
Reynolds number where transition to turbulent starts
Fraction of nominal mass flow rate where transition to turbulent occurs [1]
Flow coefficient, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flag to enable/disable computation of flow resistance [:#(type=Boolean)]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Thermodynamic pressure in the connection point [Pa|bar]
Thermodynamic pressure in the connection point [Pa|bar]
= true if port_a exposes the state of a fluid volume [:#(type=Boolean)]
= true if port_b.p exposes the state of a fluid volume [:#(type=Boolean)]
= false to hide the arrow in the model icon [:#(type=Boolean)]
Guess value of dp = port_a.p - port_b.p [Pa|bar]
Guess value of m_flow = port_a.m_flow [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if temperatures at port_a and port_b are computed [:#(type=Boolean)]
= true, if volume flow rate at inflowing port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b (= port_a.p - port_b.p) [Pa|bar]
Maximum heat flow rate for heating (positive) [W]
Maximum heat flow rate for cooling (negative) [W]
Nominal mass flow rate, used for regularization near zero flow [kg/s]
Time constant at nominal flow rate (used if energyDynamics <> Modelica.Fluid.Types.Dynamics.SteadyState) [s]
Initial or guess value of set point [K|degC]
Formulation of energy balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Specific heat capacity at default medium state [J/(kg.K)]
Flag, true if maximum heating power is restricted [:#(type=Boolean)]
Flag, true if maximum cooling power is restricted [:#(type=Boolean)]
Small value for deltah used for regularization [J/kg]
Flag, true if the sensor is a dynamic sensor [:#(type=Boolean)]
Mass flow rate, or zero if reverse flow [kg/s]
Mass flow rate bounded away from zero [kg/s]
Set point for enthalpy leaving port_b [J/kg]
Temperature of outlet state assuming unlimited capacity and taking dynamics into account [K|degC]
der(Temperature of outlet state assuming unlimited capacity and taking dynamics into account) [K/s]
Actual enthalpy difference from port_a to port_b [J/kg]
Gain to take flow rate into account for sensor time constant [1]
Normalized mass flow rate [1]
Table matrix ( e.g., table=[u1, y1; u2, y2; u3, y3])
Table matrix ( e.g., table=[u1, y1; u2, y2; u3, y3])
Table matrix ( e.g., table=[u1, y1; u2, y2; u3, y3])
Table matrix ( e.g., table=[u1, y1; u2, y2; u3, y3])
Offset of output signal
If true, then y=y1 for u<u1, and y=yMax for u>uMax [:#(type=Boolean)]
Number of columns [:#(type=Integer)]
Vector to take offset of output signal into account
Vector to take offset of output signal into account
Vector to take offset of output signal into account
Vector to take offset of output signal into account
Vector to take offset of output signal into account
Vector to take offset of output signal into account
Vector to take offset of output signal into account
Vector to take offset of output signal into account
Number of inputs (= number of outputs) [:#(type=Integer)]
= true, if table is defined on file or in function usertab [:#(type=Boolean)]
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
= true, if info message that file is loading is to be printed [:#(type=Boolean)]
Columns of table to be interpolated [:#(type=Integer)]
Smoothness of table interpolation [:#(type=Modelica.Blocks.Types.Smoothness)]
[:#(type=Integer)]
= 1, if table was successfully read from file
Formulation of energy balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of mass balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of substance balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of trace substance balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume [1]
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Thermodynamic pressure in the connection point [Pa|bar]
Thermodynamic pressure in the connection point [Pa|bar]
Mass flow rate from the connection point into the component [kg/s]
Thermodynamic pressure in the connection point [Pa|bar]
Absolute pressure of medium [Pa|bar]
Density of medium [kg/m3|g/cm3]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
Absolute pressure of medium [Pa|bar]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Molar masses of components [kg/mol]
Molar masses of components [kg/mol]
Mass fraction of air [kg/kg]
Temperature difference used to compute enthalpy [K,]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Masses of independent components in the fluid [kg]
der(Masses of independent components in the fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
Moisture mass flow rate added to the medium [kg/s]
[W]
[W]
[W]
[kg/s]
[kg/s]
[kg/s]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Density, used to compute fluid mass [kg/m3|g/cm3]
Vector with zero everywhere except where species is [1]
Start value for specific enthalpy [J/kg]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Thermodynamic pressure in the connection point [Pa|bar]
Thermodynamic pressure in the connection point [Pa|bar]
= true if port_a exposes the state of a fluid volume [:#(type=Boolean)]
= true if port_b.p exposes the state of a fluid volume [:#(type=Boolean)]
= false to hide the arrow in the model icon [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Set to true if sensible exchange only [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true if the heat flow rate is not a function of a temperature difference to the fluid temperature [:#(type=Boolean)]
Sensible plus latent heat flow rate transferred into the medium [W]
Moisture mass flow rate added to the medium [kg/s]
Vector with zero everywhere except where species is [1]
Regularization of 1/m_flow [s/kg]
Mass flow rates of independent substances added to the medium [kg/s]
Smoothing region for inverseXRegularized
Inverse value of delta for inverseXRegularized
Polynomial coefficient for inverseXRegularized
Polynomial coefficient for inverseXRegularized
Polynomial coefficient for inverseXRegularized
Polynomial coefficient for inverseXRegularized
Polynomial coefficient for inverseXRegularized
Polynomial coefficient for inverseXRegularized
Integrator gain [1]
Type of initialization (1: no init, 2: steady state, 3,4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of output (= state)
Connector of Real input signal
Connector of Real output signal
der(Connector of Real output signal)
Gain of upper input
Gain of middle input
Gain of lower input
Connector 3 of Real input signals
Connector of Real output signal
Gain of upper input
Gain of lower input
Gain value multiplied with input signal [1]

